# This configuration for Chapter 5 to illustrate how we can send logs to multiple ouptuts using copy.
# set Fluentd's configuration parameters
<system>
    Log_Level info
</system>


#### begin tail log file
<source>
  @type tail
  path ./Chapter5/annotated-file-1.txt
  read_lines_limit 5
  tag simpleFile
  pos_file ./Chapter5/annotated-file.pos_file
  read_from_head true
  <parse>
    @type json
  </parse>
</source>
#### end tail log file

<match *>
  @type copy
  # copy_mode deep
  <store ignore_error>
    # this is the replacement of the null type which includes the ignore error element in the store command
    @type mongo
    @id mongo-output
    host localhost
    port 27017
    database Fluentd
    collection Fluentd
    <buffer>
      delayed_commit_timeout 10
      flush_at_shutdown true
      chunk_limit_records 50
      flush_interval 30
      flush_mode interval
    </buffer>
  </store>
  <store>
    #### begin - stdout
    @type stdout
    <inject>
      hostname_key hostName
      worker_id_key workerId
      time_key fluentdTime
      time_type string
      localtime true    
    </inject>
    #### end - std out
  </store>
  <store>
    #### begin file out
    @type file
    @id bufferedFileOut
    path ./Chapter5/fluentd-file-output
    <buffer>
      delayed_commit_timeout 10
      flush_at_shutdown true
      chunk_limit_records 500
      flush_interval 30
      flush_mode interval
    </buffer>
    <format>
      @type out_file
      delimiter comma
      output_tag true
    </format>
    #### end file out
  </store>

  @include additionalStore.conf
</match>
