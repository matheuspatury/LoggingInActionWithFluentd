# This configuration for Chapter 5 to illustrate the use of the tag can control routing
# set Fluentd's configuration parameters
<system>
    Log_Level info
</system>

#### begin - AppA source
<source>
  @type dummy
  dummy {"hello from":"App A"}
  auto_increment_key AppACounter
  tag AppA
  rate 5
</source>
#### end - AppA source

#### begin - exec - execute a command and process response
<source>
  @type exec
  command more .\TestData\valuePair.txt
  run_interval 7s
  tag AppAPart2
</source>
#### end - execute a command and process response

#### begin - AppB source
<source>
  @type dummy
  dummy {"Goodbye from":"App B"}
  auto_increment_key AppBIncrement
  tag AppB
  rate 3
</source>
#### end - AppB source

#### begin - file out 1 - which will catch events from source 2 (tagged AppB)
<match AppB>
    @type file
    path ./Chapter5/AppB-file-output
    @id AppBOut
    <buffer>
      delayed_commit_timeout 10
      flush_at_shutdown true
      chunk_limit_records 5
      flush_interval 15
      flush_mode interval
    </buffer>
    <format>
      @type out_file
      delimiter comma
      output_tag true
    </format>   
</match>
#### end - file out 1

#### begin - file out 2 - which will catch events from source 1 (tagged AppA)
<match AppA*>
    @type file
    path ./Chapter5/AppA-file-output
    @id AppAOut
    <buffer>
      delayed_commit_timeout 10
      flush_at_shutdown true
      chunk_limit_records 5
      flush_interval 15
      flush_mode interval
    </buffer>
    <format>
      @type out_file
      delimiter comma
      output_tag true
    </format>    
</match>
#### end - file out 2